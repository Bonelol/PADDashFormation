localTranslating = {
    webpage_title: `P&D ${teamsCount}P Formation Maker`,
	addition_display: "Additional display",
    title_blank: "Input Formation Title",
    detail_blank: "Input Detail",
    sort_name:{
        sort_none: "Nope",
        sort_id: "Cards Id",
        sort_attrs : "Attribute",
        sort_evoRootId: "Cards Evolution Root",
        sort_evoRoot_Attrs : "Cards Evolution Root's Attribute",
        sort_rarity: "Rarity",
        sort_cost: "Cost",
        sort_skillLv1: "Maximum Skill Turn",
        sort_skillLvMax: "Minimum Skill Turn",
        sort_hpMax110: "Max HP",
        sort_atkMax110: "Max ATK",
        sort_rcvMax110: "Max RCV",
        sort_hpMax110_awoken: "Max HP (+Awoken)",
        sort_atkMax110_awoken: "Max ATK (+Awoken)",
        sort_rcvMax110_awoken: "Max RCV (+Awoken)",
        sort_abilityIndex_awoken: "Maximum Weighted Ability Index (+Awakening)",
    },
    force_reload_data: `Force refresh data`,
    skill_parse: {
        skill: {
            unknown: ()=>`Unknown skill type.`,
            active_turns: (turns, activeElement)=> [activeElement,`, for ${turns} turns.`],
            random_skills: (skillList)=>[`Activates these random skills:`, skillList],
            delay: ()=> `Delays enemies' next move`,
            mass_attack: ()=> `plus Mass Attack`,
            leader_change: ()=> `Switches places with Leader Monster; use again to switch back`,
            no_skyfall: ()=> `No Skyfall Combos`,
            heal: (valueElement)=> [`Recovers `, valueElement, ` as HP`],
            defense_break:  (valueElement)=> [`Reduce enemies' defense by `, valueElement],
            poison: (valueElement)=> [`Poisons all enemies, inflict damage equal to `, valueElement, ` every turn`],
            time_extend: (valueElement)=> [`Orb move time `, valueElement],
            follow_attack: (valueElement)=> [`Inflicts a bonus attack equal to `, valueElement, ` when matching Orbs`],
            auto_heal: (valueElement)=> [`Heals HP equal to `, valueElement, ` when matching Orbs`],
            ctw: (valueElement)=> [`Move Orbs freely for `, valueElement],
            gravity: (valueElement)=> [`Reduces enemies's `, valueElement],
            resolve: (stats, valueElement, probability)=> [probability<100 ? `There's a ${probability}% chance, `:'',`May leave you with 1 HP in a single hit reduced to 0, when your `, stats, ` is ≧` ,valueElement],
        },
        value: {
            unknown: (type)=>`[ unknown value: ${type}]`,
			mul: (value, showPercent) => showPercent ? `${(value * 100).keepCounts()}%` : `${value.keepCounts()}x`,
			const: (value, unit)=> `${value}${unit ? ` ${unit}` : ''}`,
			mul_maxhp: (value, stats, showPercent) => showPercent ? [`${(value * 100).keepCounts()}% of `, stats] : [stats,` ${value.keepCounts()}x`],
            mul_hp: (value, stats, showPercent) => showPercent ? [`${(value * 100).keepCounts()}% of `, stats] : [stats,` ${value.keepCounts()}x`],
            mul_atk: (value, stats, showPercent) => showPercent ? [`${(value * 100).keepCounts()}% of `, stats] : [stats,` ${value.keepCounts()}x`],
            mul_rcv: (value, stats, showPercent) => showPercent ? [`${(value * 100).keepCounts()}% of `, stats] : [stats,` ${value.keepCounts()}x`],
        },
        stats: {
            unknown: (type)=>`[ unknown stats: ${type}]`,
            maxhp: ()=>`Max HP`,
            hp: (enemy)=>`${enemy?`remaining`:`own`} HP`,
            atk: (enemy)=>`${enemy?`remaining`:`own`} ATK`,
            rcv: (enemy)=>`${enemy?`remaining`:`own`} RCV`,
            teamatk: ()=>`Team ATK`,
            teamrcv: ()=>`Team RCV`,
        },
        unit: {
            seconds : `sec`,
        },
    },
}

localisation(localTranslating);